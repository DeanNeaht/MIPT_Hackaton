"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ –º–æ–¥–µ–ª–∏ CatBoost.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ—Å–∂–∞—Ç–æ–≥–æ —Ñ–∞–π–ª–∞ –º–æ–¥–µ–ª–∏ –∏ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç –µ–≥–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.
"""

import os
import gzip
import shutil

MODEL_COMPRESSED = "dc_characters_best.cbm.gz"
MODEL_UNCOMPRESSED = "dc_characters_best.cbm"

def setup_model():
    """–†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç –º–æ–¥–µ–ª—å, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–∞."""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å
    if os.path.exists(MODEL_UNCOMPRESSED):
        print(f"‚úÖ –ú–æ–¥–µ–ª—å {MODEL_UNCOMPRESSED} —É–∂–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–∞.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–∂–∞—Ç–∞—è –º–æ–¥–µ–ª—å
    if not os.path.exists(MODEL_COMPRESSED):
        print(f"‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª {MODEL_COMPRESSED} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–æ–ª–Ω–æ—Å—Ç—å—é.")
        return
    
    print(f"üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –º–æ–¥–µ–ª–∏ {MODEL_COMPRESSED}...")
    
    try:
        # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –º–æ–¥–µ–ª—å
        with gzip.open(MODEL_COMPRESSED, 'rb') as f_in:
            with open(MODEL_UNCOMPRESSED, 'wb') as f_out:
                shutil.copyfileobj(f_in, f_out)
        
        print(f"‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–∞ –≤ {MODEL_UNCOMPRESSED}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤
        compressed_size = os.path.getsize(MODEL_COMPRESSED) / (1024 * 1024)
        uncompressed_size = os.path.getsize(MODEL_UNCOMPRESSED) / (1024 * 1024)
        
        print(f"üìä –†–∞–∑–º–µ—Ä —Å–∂–∞—Ç–æ–≥–æ —Ñ–∞–π–ª–∞: {compressed_size:.1f} MB")
        print(f"üìä –†–∞–∑–º–µ—Ä —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {uncompressed_size:.1f} MB")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–µ: {e}")

if __name__ == "__main__":
    setup_model() 